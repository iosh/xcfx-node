name: Release Conflux Rust

on: workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: macos-14
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install Rust toolchain
        run: |
          rustup install 1.77.2 
          rustup target add ${{ matrix.target }}

      - name: Set up Homebrew
        if: matrix.code-target == 'darwin-arm64' || matrix.code-target == 'linux-x64'
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install macos dependencies
        if: matrix.code-target == 'darwin-arm64'
        run: |
          brew update
          brew install llvm openssl pkg-config cmake

      - name: Install linux dependencies
        if: matrix.code-target == 'linux-x64'
        run: |
          brew install llvm openssl pkg-config cmake sqlite

      - name: Install windows dependencies
        if: matrix.code-target == 'win32-x64'
        run: |
          choco upgrade llvm

      - name: Print clang version
        run: clang --version

      - name: Build binaries
        run: |
          cd conflux-rust
          CC=clang CXX=clang++ CXXFLAGS="-std=c++11 -stdlib=libc++" LDFLAGS="-stdlib=libc++" cargo build --target ${{ matrix.target }} --release
          cd ..
      - name: Copy binaries
        if: matrix.os != 'windows-2022'
        run: |
          mkdir dist
          cp conflux-rust/target/${{ matrix.target }}/release/conflux dist/conflux-${{ matrix.code-target }}

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/
          retention-days: 1
          overwrite: true
          name: conflux-${{ matrix.code-target }}
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: conflux-*
          merge-multiple: true

      - name: Compress binaries
        run: |
          cp ./conflux-linux-x64 ./packages/node-linux-x64/conflux
          cp ./conflux-darwin-arm64 ./packages/node-darwin-arm64/conflux
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Install dependencies
        run: pnpm install
      - name: ls all file
        run:
          ls -l ./packages/node-linux-x64
          ls -l ./packages/node-darwin-arm64